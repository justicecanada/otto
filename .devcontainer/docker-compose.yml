version: '3.8'

services:
  app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
    volumes:
      - ..:/workspace:cached
    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity
    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    network_mode: service:postgres-service
    depends_on:
      - postgres-service
      - redis
    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  postgres-service:
    image: pgvector/pgvector:pg16
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
      # - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: otto
      POSTGRES_PASSWORD: password
    # Add "forwardPorts": ["5432"] to **devcontainer.json** to forward PostgreSQL locally.

  redis:
    image: redis:7.0.15-alpine3.20
    command: redis-server
    restart: unless-stopped

  celery-worker:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile_celery
    volumes:
      - ..:/workspace:cached
    working_dir: /workspace/django
    command: watchmedo auto-restart --pattern=*.py --recursive -- celery -A otto worker -l INFO --pool=gevent --concurrency=32
    network_mode: service:postgres-service
    depends_on:
      - postgres-service
      - redis
      - app
  # To test scheduling tasks uncomment the following chunk of code.
  #
  # celery-beat:
  #   build:
  #     context: ..
  #     dockerfile: .devcontainer/Dockerfile_celery
  #   volumes:
  #     - ..:/workspace:cached
  #   working_dir: /workspace/django
  #   command:  watchmedo auto-restart --pattern=*.py --recursive -- celery -A otto beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
  #   network_mode: service:postgres-service
  #   depends_on:
  #     - postgres-service
  #     - redis
  #     - app

volumes:
  postgres-data:
