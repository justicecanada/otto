version: '3.8'

services:
  app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
    volumes:
      - ..:/workspace:cached
    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity
    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    network_mode: service:postgres-service
    depends_on:
      - postgres-service
      - redis
    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  postgres-service:
    image: pgvector/pgvector:pg16
    restart: unless-stopped
    command: [
      "postgres",
      "-c", "shared_preload_libraries=pg_stat_statements",
      "-c", "pg_stat_statements.track=all",
      "-c", "shared_buffers=256MB",
      "-c", "work_mem=32MB",
      "-c", "effective_cache_size=512MB",
      "-c", "maintenance_work_mem=256MB"
    ]
    shm_size: 512mb
    volumes:
      - postgres-data:/var/lib/postgresql/data
      # - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: otto
      POSTGRES_PASSWORD: password
      POSTGRES_MAX_CONNECTIONS: 500
    # Add "forwardPorts": ["5432"] to **devcontainer.json** to forward PostgreSQL locally.

  redis:
    image: redis:7.0.15-alpine3.20
    command: redis-server
    restart: unless-stopped

  # Run Celery in the VScode container with the following command:
  # celery -A otto worker -l INFO --pool=gevent --concurrency=256

  # To test scheduling tasks also run celery beat in the VScode container with command:
  # celery -A otto beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler


volumes:
  postgres-data:
