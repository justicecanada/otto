# CM-8 & CM-9: Defines the application's components within the AKS cluster

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: staticfiles-pvc
  namespace: otto
spec:
  storageClassName: azurefile
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media-pvc
  namespace: otto
spec:
  storageClassName: azurefile
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 16Gi

---

# SC-13: Secure key management using Azure Key Vault (FIPS 140-2 compliant)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-deployment
  namespace: otto
spec:
  replicas: 2
  selector:
    matchLabels:
      app: django-app
  template:
    metadata:
      labels:
        app: django-app
    spec:
      initContainers:
      - name: init-migrate-collectstatic
        image: ${ACR_NAME}.azurecr.io/otto:latest
        command: ["sh", "-c", "echo 'Starting collectstatic'; python manage.py collectstatic --noinput; echo 'Collectstatic completed'; echo 'Starting migrate'; python manage.py migrate --noinput; echo 'Migrate completed'"]
        envFrom:
          - configMapRef:
              name: otto-configmap
        env:
          # SC-12 & SC-13: Secure storage and retrieval of cryptographic keys
          - name: DJANGO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: djangosecretkey
          - name: DJANGODB_HOST
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: djangodbhostkey
          - name: DJANGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: djangodbpasswordkey
          - name: VECTORDB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: vectordbpasswordkey
          - name: AZURE_OPENAI_KEY
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: openaiservicekey
          - name: AZURE_COGNITIVE_SERVICE_KEY
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: cognitiveservicekey
          - name: AZURE_ACCOUNT_KEY
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: storageaccountkey
          - name: ENTRA_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: entraclientsecretkey
        resources:
          requests:
            cpu: "1"
            memory: "3Gi"
          limits:
            cpu: "1"
            memory: "4Gi"
        volumeMounts:
          - name: secrets
            mountPath: "/mnt/secrets-store"
            readOnly: true
          - name: staticfiles-pv-storage
            mountPath: "/data/static"
          - name: media-pv-storage
            mountPath: "/data/media"

      containers:
        # SC-2: Secure configuration of the container
        - name: django-app-container
          image: ${ACR_NAME}.azurecr.io/otto:latest
          imagePullPolicy: Always # IfNotPresent in PROD
          ports:
            - containerPort: 8000
          envFrom:
            - configMapRef:
                name: otto-configmap
          env:
          # SC-12 & SC-13: Secure storage and retrieval of cryptographic keys
          - name: DJANGO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: djangosecretkey
          - name: DJANGODB_HOST
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: djangodbhostkey
          - name: DJANGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: djangodbpasswordkey
          - name: VECTORDB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: vectordbpasswordkey
          - name: AZURE_OPENAI_KEY
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: openaiservicekey
          - name: AZURE_COGNITIVE_SERVICE_KEY
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: cognitiveservicekey
          - name: AZURE_ACCOUNT_KEY
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: storageaccountkey
          - name: ENTRA_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: entraclientsecretkey
          resources:
            requests:
              cpu: "1"
              memory: "3Gi"
            limits:
              cpu: "2"
              memory: "8Gi"
          volumeMounts:
            - name: secrets
              mountPath: "/mnt/secrets-store"
              readOnly: true
            - name: staticfiles-pv-storage
              mountPath: "/data/static"
            - name: media-pv-storage
              mountPath: "/data/media"
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8000
              httpHeaders:
              - name: Host
                value: django-service
            initialDelaySeconds: 10
            periodSeconds: 15
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8000
              httpHeaders:
              - name: Host
                value: django-service
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 5
      volumes:
      # SC-13: Integration with Azure Key Vault for secure secret management
      - name: secrets
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "azure-keyvault"
      - name: staticfiles-pv-storage
        persistentVolumeClaim:
          claimName: staticfiles-pvc
      - name: media-pv-storage
        persistentVolumeClaim:
          claimName: media-pvc
                
---

apiVersion: v1
kind: Service
metadata:
  name: django-service
  namespace: otto
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8000
  selector:
    app: django-app
