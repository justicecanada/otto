# # List the cronjobs
# kubectl get cronjobs -n otto

# # List the jobs
# kubectl get jobs -n otto

# # List the configmaps
# kubectl get configmaps -n otto

# # Apply the configuration
# kubectl apply -f media-sync.yaml

# # Trigger the job manually
# kubectl create job --from=cronjob/media-sync-cron media-sync-cron-test-1 -n otto

# # Check the logs of the job
# kubectl logs job/media-sync-cron-test-1 -n otto -f

# # Delete the job
# kubectl delete job media-sync-cron-test-1 -n otto

# # Delete the configmap
# kubectl delete configmap media-sync-script -n otto

# # Delete the cronjob
# kubectl delete cronjob media-sync-cron -n otto

apiVersion: v1
kind: ConfigMap
metadata:
  name: media-sync-script
  namespace: otto
data:
  media_sync.sh: |
    #!/bin/bash
    # The content of this script will be replaced by the external file

---

apiVersion: batch/v1
kind: CronJob
metadata:
  name: media-sync-cron
  namespace: otto
spec:
  schedule: "0 2 * * *"  # Run daily at 2:00 AM
  timeZone: "America/Toronto"  # Specify Toronto timezone
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: media-sync
            image: ${ACR_NAME}.azurecr.io/media-sync:latest
            command: ["/bin/bash"]
            args: ["/scripts/media_sync.sh"]
            envFrom:
              - configMapRef:
                  name: otto-configmap
            env:
              - name: AZURE_STORAGE_ACCOUNT_KEY
                valueFrom:
                  secretKeyRef:
                    name: azure-keyvault-secrets
                    key: storageaccountkey
            volumeMounts:
            - name: script-volume
              mountPath: /scripts
            - name: media-pv-storage
              mountPath: /data/media
          restartPolicy: OnFailure
          volumes:
          - name: script-volume
            configMap:
              name: media-sync-script
              defaultMode: 0755
          - name: media-pv-storage
            persistentVolumeClaim:
              claimName: media-pvc
