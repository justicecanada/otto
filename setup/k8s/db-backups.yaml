# # List the cronjobs
# kubectl get cronjobs -n otto

# # List the jobs
# kubectl get jobs -n otto

# # List the configmaps
# kubectl get configmaps -n otto

# # Apply the configuration
# kubectl apply -f backups.yaml

# # Trigger the job manually
# kubectl create job --from=cronjob/backup-cron manual-backup-test-1 -n otto

# # Check the logs of the job
# kubectl logs job/manual-backup-test-1 -n otto -f

# # Delete the job
# kubectl delete job manual-backup-test-1 -n otto

# # Delete the configmap
# kubectl delete configmap backup-script -n otto

# # Delete the cronjob
# kubectl delete cronjob backup-cron -n otto


apiVersion: v1
kind: ConfigMap
metadata:
  name: backup-script
  namespace: otto
data:
  backup.sh: |
    #!/bin/bash
    set -e
    
    # Set timestamp and extract date components
    TIMESTAMP=$(date +%Y%m%d_%H%M%S)
    YEAR=$(date +%Y)
    MONTH=$(date +%m)
    DAY=$(date +%d)

    # Function to perform backup
    perform_backup() {
        local DB_TYPE=$1
        local DB_HOST=$2
        local DB_USER=$3
        local DB_NAME=$4
        local BACKUP_FILE="/tmp/${DB_TYPE}_backup_${TIMESTAMP}.sql.gz"

        echo "Backing up $DB_TYPE database to $BACKUP_FILE"
        pg_dump -h "$DB_HOST" -U "$DB_USER" -d "$DB_NAME" | gzip > "$BACKUP_FILE"

        echo "Uploading $DB_TYPE backup to Azure Storage"
        az storage blob upload --account-name "$AZURE_STORAGE_ACCOUNT_NAME" --account-key "$AZURE_STORAGE_ACCOUNT_KEY" --container-name "$BACKUP_CONTAINER_NAME" --name "db/$YEAR/$MONTH/$DAY/${DB_TYPE}_backup_${TIMESTAMP}.sql.gz" --file "$BACKUP_FILE" --overwrite > /dev/null
        
        rm "$BACKUP_FILE"
    }
    
    # Install Azure CLI if not already installed
    if ! command -v az &> /dev/null; then
        echo "Installing Azure CLI"
        apt-get update -qq && apt-get install -y -qq --no-install-recommends azure-cli
    fi

    # Perform backups
    export PGPASSWORD=$DJANGODB_PASSWORD
    perform_backup "django" "$DJANGODB_HOST" "$DJANGODB_USER" "$DJANGODB_NAME"

    export PGPASSWORD=$VECTORDB_PASSWORD
    perform_backup "vector" "$VECTORDB_HOST" "$VECTORDB_USER" "$VECTORDB_NAME"

    echo "Backup completed successfully"

---

apiVersion: batch/v1
kind: CronJob
metadata:
  name: backup-cron
  namespace: otto
spec:
  schedule: "0 2 * * *"  # Run daily at 2:00 AM
  timeZone: "America/Toronto"  # Specify Toronto timezone
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: backup
            image: ${ACR_NAME}.azurecr.io/postgres:16
            envFrom:
              - configMapRef:
                  name: otto-configmap
            env:
              - name: DJANGODB_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: azure-keyvault-secrets
                    key: djangodbpasswordkey
              - name: VECTORDB_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: azure-keyvault-secrets
                    key: vectordbpasswordkey
              - name: AZURE_STORAGE_ACCOUNT_KEY
                valueFrom:
                  secretKeyRef:
                    name: azure-keyvault-secrets
                    key: storageaccountkey
            volumeMounts:
            - name: script-volume
              mountPath: /scripts
            command: ["/bin/bash"]
            args:
            - -c
            - /scripts/backup.sh
          volumes:
          - name: script-volume
            configMap:
              name: backup-script
              defaultMode: 0755
          restartPolicy: OnFailure
