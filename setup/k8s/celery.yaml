# CM-8 & CM-9: Defines the application's components within the AKS cluster

# Persistent Volume Claim for shared storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media-pvc
  namespace: otto
spec:
  storageClassName: azurefile  # Uses Azure File storage
  accessModes:
    - ReadWriteMany  # Allows multiple pods to read and write
  resources:
    requests:
      storage: 16Gi

---

# Deployment for Celery Worker
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker
  namespace: otto
  labels:
    deployment: celery-worker
spec:
  replicas: 1  # Runs one instance of the worker
  selector:
    matchLabels:
      pod: celery-worker
  template:
    metadata:
      labels:
        pod: celery-worker
    spec:
      # The Celery worker and beat processes run as a non-root user (UID 1000)
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: celery-worker
          image: ${ACR_NAME}.azurecr.io/otto:latest  # Uses the latest image from Azure Container Registry
          command: ['celery', '-A', 'otto', 'worker', '-l', 'INFO', '--pool=gevent', '--concurrency=32']  # Starts Celery worker
          securityContext:
            allowPrivilegeEscalation: false  # Privilege escalation is disabled
            readOnlyRootFilesystem: true  # The root filesystem is read-only for added security
          envFrom:
            - configMapRef:
                name: otto-configmap  # Loads environment variables from a ConfigMap
          env:
          # Environment variables loaded from Azure Key Vault secrets
          - name: DJANGO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: djangosecretkey
          - name: VECTORDB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: vectordbpasswordkey
          - name: AZURE_OPENAI_KEY
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: openaiservicekey
          - name: AZURE_COGNITIVE_SERVICE_KEY
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: cognitiveservicekey
          - name: AZURE_ACCOUNT_KEY
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: storageaccountkey
          - name: DJANGODB_HOST
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: djangodbhostkey
          - name: DJANGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: djangodbpasswordkey
          - name: ENTRA_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: entraclientsecretkey
          resources:
            requests:
              cpu: "1"
              memory: "2Gi"
            limits:
              cpu: "1"
              memory: "2Gi"
          volumeMounts:
            - name: secrets  # Mounts secrets from Azure Key Vault
              mountPath: "/mnt/secrets-store"
              readOnly: true
            - name: media-pv-storage
              mountPath: "/data/media"  # Mounts shared storage for media
            - name: tmp
              mountPath: /tmp # A writable /tmp directory is provided for temporary files
      volumes:
      - name: secrets
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "azure-keyvault"
      - name: media-pv-storage
        persistentVolumeClaim:
          claimName: media-pvc  # References the PVC defined earlier
      - name: tmp
        emptyDir: {}

---


# Deployment for Celery Beat (scheduler)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-beat
  namespace: otto
  labels:
    deployment: celery-beat
spec:
  replicas: 1  # Runs one instance of the beat scheduler
  selector:
    matchLabels:
      pod: celery-beat
  template:
    metadata:
      labels:
        pod: celery-beat
    spec:
      # The Celery worker and beat processes run as a non-root user (UID 1000)
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: celery-beat
          image: ${ACR_NAME}.azurecr.io/otto:latest  # Uses the same image as the worker
          command: ['celery', '-A', 'otto', 'beat', '-l', 'INFO', '--scheduler', 'django_celery_beat.schedulers:DatabaseScheduler']  # Starts Celery beat scheduler
          securityContext:
            allowPrivilegeEscalation: false  # Privilege escalation is disabled
            readOnlyRootFilesystem: true  # The root filesystem is read-only for added security
          envFrom:
            - configMapRef:
                name: otto-configmap  # Loads environment variables from a ConfigMap
          env:
          # Environment variables loaded from Azure Key Vault secrets (same as worker)
          - name: DJANGO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: djangosecretkey
          - name: VECTORDB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: vectordbpasswordkey
          - name: AZURE_OPENAI_KEY
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: openaiservicekey
          - name: AZURE_COGNITIVE_SERVICE_KEY
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: cognitiveservicekey
          - name: AZURE_ACCOUNT_KEY
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: storageaccountkey
          - name: DJANGODB_HOST
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: djangodbhostkey
          - name: DJANGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: djangodbpasswordkey
          - name: ENTRA_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: entraclientsecretkey
          volumeMounts:
            - name: secrets
              mountPath: "/mnt/secrets-store"
              readOnly: true
            - name: media-pv-storage
              mountPath: "/data/media"
            - name: tmp
              mountPath: /tmp  # Mounts the writable directory for the schedule file
      volumes:
      - name: secrets
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "azure-keyvault"  # Uses Azure Key Vault for secrets
      - name: media-pv-storage
        persistentVolumeClaim:
          claimName: media-pvc  # References the same PVC as the worker
      - name: tmp
        emptyDir: {}  # Provides a writable directory for the celerybeat-schedule file
